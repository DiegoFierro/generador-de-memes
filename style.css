/* Variables (para una fácil modificación de colores) */
:root {
    --primary-color: #4CAF50;
    --secondary-color: #366d3a;
    --text-color: #333;
    --bg-color: #f4f4f4;
    --border-color: #ddd;
    --shadow-color: rgba(0, 0, 0, 0.1);
}

/* Aplicar border-box a todos los elementos para un modelo de caja predecible */
*, *::before, *::after {
    box-sizing: border-box;
}

body {
    font-family: 'Arial', sans-serif;
    display: flex;
    flex-direction: column; /* Cambiado a columna para apilar header y container */
    justify-content: flex-start; /* Alinea al inicio verticalmente */
    align-items: center; /* Centra horizontalmente el contenido */
    min-height: 100vh; /* Asegura que el body siempre ocupe toda la altura del viewport */
    margin: 0;
    background-color: var(--bg-color);
    color: var(--text-color);
    padding: 20px; /* Padding general para el body */
}

/* --- Nuevo estilo para el header de la app --- */
.app-header {
    width: 100%;
    max-width: 1200px; /* Ancho máximo igual al container para alineación */
    text-align: center;
    padding: 20px;
    margin-bottom: 20px; /* Espacio entre el header y el container */
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 2px 10px var(--shadow-color);
}

.app-header h1 {
    color: var(--primary-color);
    margin: 0; /* Elimina márgenes extra del h1 dentro del header */
    font-size: 2.5em; /* Ajusta el tamaño del título */
}

.container {
    background-color: #fff;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 4px 15px var(--shadow-color);
    width: 100%;
    max-width: 1200px; /* Ancho máximo para el layout de dos columnas */
    text-align: center; /* Mantener por si hay contenido centrado no flex */
    display: flex;
    flex-direction: column; /* Apilado por defecto (móvil) */
    gap: 30px; /* Espacio entre secciones */
}

.meme-preview {
    position: relative;
    width: 100%;
    margin: 0 auto;
    border: 2px dashed var(--border-color);
    border-radius: 5px;
    overflow: hidden; /* Importante para que la imagen no se desborde si el canvas es más grande */
    min-height: 300px; /* Altura mínima para que sea visible en móvil */
    background-color: #f0f0f0;

    display: flex; /* Para centrar el contenido (canvas o mensaje) */
    justify-content: center;
    align-items: center;
}

#memeCanvas {
    display: block; /* Asegura que el canvas se muestre */
    max-width: 100%; /* El canvas nunca debe ser más ancho que su contenedor */
    height: auto; /* Mantiene la relación de aspecto */
    width: 100%; /* El canvas debe ocupar todo el ancho disponible de su contenedor */
    min-height: 100px; /* Altura mínima para el canvas mismo, por si el JS tarda */
    background-color: #ccc; /* Fondo temporal para el canvas, debería desaparecer con imagen */
}

#noImageMessage {
    padding: 20px;
    color: #666;
    background-color: #fff;
    text-align: center;

    position: absolute; /* Para que cubra el canvas cuando no hay imagen */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;

    display: flex; /* Para centrar el texto del mensaje */
    justify-content: center;
    align-items: center;
    pointer-events: none; /* Permite hacer clic a través del mensaje si es necesario */
    z-index: 2; /* Asegurar que esté por encima del canvas */
    opacity: 1; /* Forzar la opacidad para asegurar visibilidad */
    visibility: visible; /* Forzar la visibilidad */
}

/* Reglas de visibilidad controladas por JS:
   Cuando .meme-preview tiene la clase .has-image, ocultar el mensaje y mostrar el canvas. */
.meme-preview.has-image #noImageMessage {
    display: none !important;
    opacity: 0 !important;
    visibility: hidden !important;
}

.meme-preview.has-image #memeCanvas {
    background-color: transparent; /* Quitar fondo temporal cuando hay imagen */
    display: block !important;
}

.controls {
    display: flex;
    flex-direction: column;
    gap: 15px;
    width: 100%;
}

.input-group {
    text-align: left;
}

.input-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: bold;
    color: var(--secondary-color);
}

.input-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid var(--border-color);
    border-radius: 5px;
    box-sizing: border-box;
}

/* --- Estilo específico para input de tipo file --- */
.input-group input#imageUpload {
    display: none; /* Ocultar el input real */
}

.input-group .file-upload-button {
    background-color: var(--primary-color);
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    display: block;
    transition: background-color 0.3s ease;
    text-align: center;
    width: 100%;
    max-width: 250px;
    margin-top: 5px;
    box-sizing: border-box;
    white-space: nowrap;
    margin-left: auto;
    margin-right: auto;
}

.input-group .file-upload-button:hover {
    background-color: var(--secondary-color);
}

.file-name {
    display: block;
    font-size: 0.9em;
    color: #666;
    margin-top: 10px;
    word-wrap: break-word;
}

button {
    background-color: var(--primary-color);
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
    width: 100%;
}

button:hover {
    background-color: var(--secondary-color);
}

/* --- Media Queries para Responsividad --- */

/* Pantallas Intermedias (Tablets) - A partir de 768px */
@media (min-width: 768px) {
    .container {
        max-width: 700px;
        padding: 40px;
    }
}

/* Pantallas Grandes (PC) - A partir de 1024px */
@media (min-width: 1024px) {
    body {
        padding: 40px; /* Espacio alrededor de todo el contenido */
    }

    .container {
        max-width: 1200px; /* Ancho máximo para el layout de dos columnas */
        height: auto;
        min-height: 80vh; /* Asegura una altura mínima para el contenedor principal */
        display: flex;
        flex-direction: row; /* **DISPOSICIÓN EN DOS COLUMNAS** */
        align-items: stretch; /* CRUCIAL: Estira los hijos (preview y controls) para que tengan la misma altura */
        gap: 40px; /* Espacio entre las columnas */
        text-align: left; /* Alinea el texto a la izquierda dentro de las columnas */
        padding: 40px;
    }

    .controls {
        flex: none; /* No crece ni se encoge, usa su ancho fijo */
        width: 380px; /* Ancho fijo para la columna de controles */
        min-width: 300px; /* Asegura que la columna de controles no sea demasiado estrecha */
        height: auto;
    }

    .meme-preview {
        flex: 1; /* Ocupa todo el espacio restante disponible en la fila */
        min-width: 300px; /* Asegura un ancho mínimo para la columna de la imagen */
        
        min-height: 500px; /* Altura mínima para la previsualización en PC */
        height: auto; /* Permite que se ajuste a la altura del container */
        
        display: flex; /* Para centrar el canvas dentro de este espacio */
        justify-content: center;
        align-items: center;
        overflow: hidden; /* Asegura que el contenido no se desborde */
    }

    #memeCanvas {
        display: block;
        max-width: 100%; /* Nunca más ancho que el contenedor */
        height: auto; /* Mantiene la proporción de la imagen */
        width: 100%; /* Ocupa todo el ancho disponible del .meme-preview */
        min-height: 100%; /* CRUCIAL: Intenta ocupar al menos toda la altura del contenedor padre */
        object-fit: contain; /* La imagen completa siempre visible, con posibles espacios */
    }

    /* Estilos para el botón de descarga y el botón de carga de archivo */
    button,
    .input-group .file-upload-button {
        width: auto;
        align-self: flex-start; /* Alinea a la izquierda en un contenedor flex */
        max-width: none;
        margin-left: 0;
        margin-right: 0;
    }

    /* Asegurarnos que el label "Cargar Imagen:" (el título) no se estire */
    .input-group label:not(.file-upload-button) {
        width: auto;
        display: block;
    }
}
